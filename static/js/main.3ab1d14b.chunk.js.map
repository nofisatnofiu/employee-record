{"version":3,"sources":["Data.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["TableHeader","scope","TableBody","props","rows","tableEmployees","map","employee","index","firstname","lastname","department","hiredate","onClick","tableOnDelete","value","id","className","Data","employees","onDelete","Form","onSubmit","onAddEmployee","htmlFor","type","name","firstName","onChange","onFirstNameInputChange","lastName","onLastNameInputChange","onDepartmentInputChange","hireDate","onHireDateInputChange","EMPLOYEES_RECORDS","localStorage","getItem","JSON","parse","App","useState","setEmployees","setFirstName","setLastName","setDepartment","setHireDate","useEffect","setItem","stringify","event","parseInt","target","identity","find","undefined","window","confirm","result","filter","preventDefault","employeeObject","length","concat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ab1d14b.chunk.js","sourcesContent":["import React from 'react';\nimport { Trash } from 'react-bootstrap-icons';\n\nconst TableHeader = () => { \n    return (\n        <thead>\n            <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">First Name</th>\n                <th scope=\"col\">Last Last</th>\n                <th scope=\"col\">Department</th>\n                <th scope=\"col\">Hire Date</th>\n            </tr>\n        </thead>\n    );\n}\n\nconst TableBody = (props) => { \n\n    const rows = props.tableEmployees.map((employee, index) => {\n        return (\n            <tr key={index}>\n                <th scope=\"row\">{index + 1}</th>\n                <td>{employee.firstname}</td>\n                <td>{employee.lastname}</td>\n                <td>{employee.department}</td>\n                <td>{employee.hiredate}</td>\n                <td><button onClick={props.tableOnDelete} value={employee.id} className=\"btn btn-primary\">  Delete <Trash /> </button></td>\n            </tr>\n        );\n    });\n\n    return <tbody>{rows}</tbody>;\n}\n\n\nconst Data = (props) => {\n   \n    return (\n         <div>\n             <table className=\"table table-striped\">\n                <TableHeader />\n                <TableBody \n                    tableEmployees={props.employees}\n                    tableOnDelete={props.onDelete} \n                />\n            </table>\n         </div>\n     );\n };\n\n export default Data;","import React from 'react';\n\nconst Form = (props) => {\n   \n    return (\n\n        <div className=\"row\">\n            <div className=\"col-sm-6\">\n            <form onSubmit={props.onAddEmployee}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"firstname\" className=\"form-label\">First Name</label>\n                <input\n                    className=\"form-control\" \n                    type=\"text\" \n                    name=\"firstname\" \n                    id=\"firstname\"\n                    value={props.firstName} \n                    onChange={props.onFirstNameInputChange} />\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"lastname\" className=\"form-label\">Last Name</label>\n                <input \n                    className=\"form-control\" \n                    type=\"text\" \n                    name=\"lastname\" \n                    id=\"lastname\"\n                    value={props.lastName}\n                    onChange={props.onLastNameInputChange} />\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"department\" className=\"form-label\">Department</label>\n                <input \n                    className=\"form-control\" \n                    type=\"text\" \n                    name=\"department\" \n                    id=\"department\"\n                    value={props.department}\n                    onChange={props.onDepartmentInputChange} />\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"hiredate\" className=\"form-label\">Hire Date</label>\n                <input \n                    className=\"form-control\" \n                    type=\"date\" \n                    name=\"hiredate\" \n                    id=\"hiredate\"\n                    value={props.hireDate}\n                    onChange={props.onHireDateInputChange} />\n            </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                    Add Record\n                </button>\n            </form>\n            </div>\n        </div>\n\n     );\n };\n\n export default Form;","import React, { useState, useEffect } from 'react';\nimport Data from './Data';\nimport Form from './Form';\nimport './App.css';\n\nconst EMPLOYEES_RECORDS = localStorage.getItem('employeesdata')\n  ? JSON.parse(localStorage.getItem('employeesdata'))\n  : [];\n\nconst App = () => {\n  const [ employees, setEmployees ] = useState(EMPLOYEES_RECORDS);\n\n  const [ firstName, setFirstName ] = useState('');\n  const [ lastName, setLastName ] = useState('');\n  const [ department, setDepartment ] = useState('');\n  const [ hireDate, setHireDate ] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('employeesdata', JSON.stringify(employees))\n  }, [employees]);\n\n  const handleFirstNameInputChange = (event) => {\n    setFirstName(event.target.value);\n  };\n\n  const handleLastNameInputChange = (event) => {\n    setLastName(event.target.value);\n  };\n\n  const handleDepartmentInputChange = (event) => {\n    setDepartment(event.target.value);\n  };\n\n  const handleHireDateInputChange = (event) => {\n    setHireDate(event.target.value);\n  };\n\n  //Add an employee record\n  const addEmployee = (event) => {\n    event.preventDefault();\n    \n    const employeeObject = {\n      id: employees.length + 1,\n      firstname: firstName,\n      lastname: lastName,\n      department: department,\n      hiredate: hireDate\n    };\n\n    setEmployees(employees.concat(employeeObject));\n    setFirstName('');\n    setLastName('');\n    setDepartment('');\n    setHireDate('');\n\n  };\n\n  //Delete an employee record\n  const deleteEmployee = (event) => {\n    const id = parseInt(event.target.value, 10)\n    const identity = employees.find(employee => employee.id === id);\n\n    if( identity !== undefined) {\n        const response = window.confirm(`Delete employee ${identity.firstname} ${identity.lastname} record ?`);\n        if(response){\n          const result = employees.filter(employee => employee.id !== id);\n          setEmployees(result);\n        }\n    }\n  };\n\n  return (\n      <div className=\"container my-5\">\n          <h1 className=\"text-center my-3\">Employee Records</h1>\n          <p className=\"text-center\">Add an employee data to the employee records table.</p>\n          <Data \n            employees={employees}\n            onDelete={deleteEmployee} \n          />\n          <h3 className=\"mt-5 mb-3\">Add New Employee</h3>\n          <Form \n            firstName={firstName}\n            lastName={lastName}\n            department={department}\n            hireDate={hireDate}\n            onFirstNameInputChange={handleFirstNameInputChange}\n            onLastNameInputChange={handleLastNameInputChange}\n            onDepartmentInputChange={handleDepartmentInputChange}\n            onHireDateInputChange={handleHireDateInputChange}\n            onAddEmployee={addEmployee} \n          />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}